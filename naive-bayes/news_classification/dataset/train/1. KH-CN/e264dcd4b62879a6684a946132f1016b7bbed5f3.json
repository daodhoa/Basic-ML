{
    "code": "e264dcd4b62879a6684a946132f1016b7bbed5f3",
    "title": "Project đôi khi cách tệ nhất để học JavaScript",
    "url": "http://techtalk.vn/project-doi-khi-cach-te-nhat-de-hoc-javascript.html",
    "labels": "techtalk/Cong nghe",
    "content": "Một trong những lời khuyên nguy hiểm nhất cho người học JavaScript là “cứ việc làm projects thôi.”Hiển nhiên, project là phương tiện tuyệt vời để học tập bất cứ ngôn ngữ lập trình nào. Tuy nhiên, vấn đề xuất hiện khi người ta cứ vồ vập lấy những project khó nhằn trong khi lại chưa đủ kiến thức cơ bản để đánh giá được làm thế nào là đúng hay sai.Vấn đề này rất quan trọng, vì nếu nhảy vào một project quá sớm, người ta có thể trở nên chán nản và hoàn toàn từ bỏ JavaScript luôn.Tôi sẽ không để bạn đi vào vết xe đổ này, vậy nên, trong bài viết, bạn sẽ đọc về:Mục tiêu của bài viết này là để truyền sự tự tin trong học tập, dù bạn đang học JavaScript hay bất cứ ngôn ngữ lập trình nào khác.Một trong những câu nói tôi thường nghe nhất từ những người muốn học JavaScript là “Để tôi lập slideshow nhanh đã.”Họ thử lập slideshow, và một trong hai tình huống sau sẽ xảy ra:Tại sao việc này lại sảy ra?Người học JavaScript thường chọn slideshow làm project đầu tiên của mình vì nghe nó có vẻ đơn giản.Khi họ bắt tay vào thực hiện, họ lại thấy khó hơn mình tưởng. Tạo slideshow có thể dính đến array, function, loop, animation, timing, thậm chí là listener, DOM manipulation và hơn thế nữa. Đây là một con số khái niệm mới lạ vô cùng choáng ngợp cho những ai mới chân ướt chân ráo bước vào lĩnh vực này.Bỗng nhiên, một project tưởng chừng dễ nhằn lại trở nên vô cùng khó khăn. Sự khác biệt so với kỳ vọng ban đầu gây ra hiệu ứng tâm lý vô cùng kinh khủng. Người học tự nhủ “Nếu dễ thế này mà làm không được, thì chắc tôi không hợp với JavaScript rồi”.Thay vào đó, một số người sẽ thành công cho ra đời một slideshow, nhưng đây sẽ là bản chấp vá từ sự trợ giúp của hàng tá bài hướng dẫn cùng những thấu hiểu khá ít ỏi về mọi thứ đang diễn ra. Trong những trường hợp này, bạn thường nghe những câu như, “Tôi đã có thể làm đúng theo hướng dẫn, nhưng rồi lại chả áp dụng được cho bản thân.”Dù có làm được hay không đi chăng nữa, kết quả cuối cùng thường là cảm giác chán chường có thể khiến người ta từ bỏ học JavaScript.Những kịch bản này không chỉ xảy đến với slideshow mà còn với các project mà người học nhảy vào lúc quá sớm. Ví dụ, một to-do list nghe có vẻ đơn giản, nhưng lại có thể biến thành một full-stack project nếu data được lưu trữ bên ngoài bộ nhớ cục bộ hoặc cookies của trình duyệt.Khi ai đó bắt đầu học JavaScript, việc xác định trước độ khó của một project không phải là điều dễ dàng, và đó là ngọn nguồn của vấn đề.Để cũng cố vấn đề hơn, sau đây là một số project nghe-có-vẻ-dễ cụ thể mà người ta thường thực hiện quá sớm, và các khái niệm thực sự có liên quan.Mục tiêu của phần này không phải là đễ dọa bạn sợ thử những thứ mới. Bạn có thể tìm đến những project này nhanh hơn bạn tưởng, miễn là bạn không bắt đầu với chúng ngay từ ban đầu.Tất cả bạn cần là một cách tiếp cận tốt hơn.Sau đây là một số chiến lược giúp bạn tránh đước những cái bẫy liên quan đến việc nhận project từ quá sớm:Thay vì nhảy ngay vào project lớn, hãy thử học tập những mẫu functionality nhỏ trước. Như vậy, bạn sẽ bắt đầu vời một nền tảng kiến thức vững chắc hơn và code dễ hơn về sauVí dụ, hiện tex trong một div với innerHTML. Thay đổi màu sắc của text trong một đoạn văn. Cộng hai số với nhau. Viết function đầu tiên của bạn. Làm quen hơn với biến. Lưu trữ một tập chủ thể trong một array hoặc một object. Tạo sự kiện khi nút được nhấn. Biết thêm về logic với if và else. Thử một số vòng lặp.Hãy thử nghiệm và thật sự thoải mái với những khái niệm này. Bạn sẽ sớm có thể mình thực hiện rất nhiều thứ. Hơn nữa, những kinh nghiệm mới thu nhặt được sẽ giúp bạn quyết định tìm đến project nào tốt hơn. khi bạn thấy mình thành công nhiều hơn, sự tự tin của bạn sẽ gia tăng, và bạn sẽ có “đà” chạy nhanh hơn nữa, thay vì nhảy vào project lớn và không còn tý đà nào luôn.Phải công nhận, thách thức rất quan trọng, vì chúng giúp bạn phát triển. Nhích khỏi “vùng thoải mái” của bạn mang lại nhiều lợi ích, nhưng đừng đi quá xa trật khỏi tiến trình của bạn.Khi bạn học tập, hãy đảo bảo dành thời gian ra để tập luyện dưới điều kiện thực. Đồng nghĩa với việc sử dụng text editor và trình duyệt của chính bạn và code mà không dựa vào hướng dẫn.Càng luyện tập code trong điều kiện thực càng nhiều, bạn càng ít có cảm giác bế tắc khi đến lúc phải thực sự tạo ra thứ gì đó.Đây là một cách hay để tránh tình trạng dùng hướng dẫn được, nhưng lại chả hướng dẫn được.Khi bạn đã bắt đầu biết được những điểm nền tảng trong JavaScript, bạn sẽ bắt đầu biết được kiểu project nào là khả thi.Tuy việc thử thách bản thân rất quan trọng, nhưng bạn sẽ không muốn thử xây dựng ứng dụng ngân hàng số end-to-end, trước khi bạn biết cách hiển thị một dòng text lên màn hình đâu.Khái niệm và một số ví dụ cụ thể bạn có thể học được và các bộ project mini lúc đó bạn có thể thực hiện. Các ví dụ trong bản này được sắp xếp theo hướng mục này làm nền tảng cho mục sau.Lần này có vẻ như chúng ta thực hiện các bước theo thứ tự khác đi. Thay vì bắt đầu bằng một dự án và cố gắng chơi chụp bắt với những khái niệm cần có, chúng ta lại bắt đầu với khái niệm và xây dựng dự án dựa trên những khái niệm này.Hướng đi này sẽ có tác động mạnh mẽ lên cách học của bạn, vì thay vì nhảy quá nhanh về phía trước và cảm thấy tụt lại phía sau, bạn sẽ học được nền tảng giúp bạn tự tin ở mỗi bước đi. Kiến thức bạn học được sẽ hỗ trợ cho nhau, và chẳng sớm cũng muộn, bạn sẽ tìm đến những project lớn hơn bạn tưởng.Giả sử bạn đã biết được một số khái niệm, bạn sẽ bắt đầu thử sức với project.Làm sao bạn biết được mình sẽ dùng và nên tránh khái niệm nào?Để sử dụng analogy không code: giả sử bạn đang đóng một chiếc ghế và bạn muốn xiết chặt hai thanh gỗ bằng cái đinh vít. Bạn có thể dùng tay cũng được, nhưng bạn sẽ thấy đau tay và tẻ nhạt. Vì bạn đã biết về cái đinh vít rồi, bạn biết dùng đinh vít thì tốt hơn. Còn đinh vít điện thì nhanh khỏi hỏi.Trong ví dụ này, bạn càng biết nhiều công cụ, bạn càng biết cách phân tích vấn đề và lựa chọn công cụ phù hợp nhất.Hãy mang ví dụ này trở lại code, mỗi khái niệm là một công cụ. Bạn càng học được nhiều khái niệm, hộp dụng cụ code của bạn sẽ càng nhiều, và bạn sẽ càng biết được mình phải dùng thứ gì.Như vậy, dưới đây là một số hướng tư duy trong một project:Khi bạn thực hiện những bước này với ngày càng nhiều project, bạn sẽ cảm thấy thoải mái hơn khi phải lựa chọn các khái niệm phù hợp cho công việc.Việc còn lại phải làm là luyện tập nữa thôi.Project có thể coi là một trong những cách tốt nhất và… tệ nhất để học JavaScript. Điểm khác biệt nằm ở chỗ lựa chọn thời điểm.Một trong những lý do người ta không thể học được JavaScript là do nhảy vào project mà không biết đủ kiến thức cơ bản. lý do này thường dẫn đến chán nản và bỏ ngang.Để tránh cái bẫy project, hãy thử nghiệm với khái niệm trước, và thực hiện miniproject dựa trên những khái niệm này. Như vậy, bạn sẽ có được nền tàng vững chắc hơn, ghi nhớ tốt hơn, và tiến độ nhanh hơn. Bạn cũng sẽ ít bị choáng ngợp hơn nữa.Càng luyện tập nhiều ở điều kiện đời thực, bạn sẽ giảm thiểu nguy cơ bế tắc khi đến lúc phải tìm đến hướng dẫn.Đến cùng, có vẻ như mỗi người lại có một cách tiếp thu kiến thức khác nhau. Không có ý nào trong bài viết này được áp đặt là quy luật cứng nhắc, mà là những gợi ý thân thiện mà hy vọng sẽ giúp bạn hoặc bất cứ ai tránh được những cái bẫy mà đã có quá nhiều người sa vào.Techtalk via Sitepoint",
    "image_url": "",
    "date": "2016-12-09T08:00:41Z"
}